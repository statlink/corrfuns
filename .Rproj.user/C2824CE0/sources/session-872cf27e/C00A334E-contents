permcor <- function(x, B = 999, fast = TRUE) {

  if (fast) {
    res <- Rfast::permcor(x[, 1], x[, 2], R = B)
  } else {
    n <- dim(x)[1]
    x1 <- x[, 1]      ;     x2 <- x[, 2]
    m1 <- sum(x1)     ;     m12 <- sum(x1^2)
    m2 <- sum(x2)     ;     m22 <- sum(x2^2)
    up <-  m1 * m2 / n
    down <- sqrt( (m12 - m1^2 / n) * (m22 - m2^2 / n) )
    r <- ( sum(x1 * x2) - up) / down
    test <- log( (1 + r) / (1 - r) )  ## test statistic
    R <- round( sqrt(B) )
    xp <- Rfast::colShuffle( matrix(x, nrow = n, ncol = R) )
    yp <- Rfast::colShuffle( matrix(y, nrow = n, ncol = R) )
    sxy <- crossprod(xp, yp)
    rb <- (sxy - up) / down
    tb <- log( (1 + rb) / (1 - rb) )  ## the test statistic
    pvalue <- ( sum( abs(tb) > abs(test) ) + 1 ) / (R^2 + 1)  ## permutation p-value
    res <- c( r, pvalue )
    names(res) <- c('correlation', 'p-value')
  }
  res
}
